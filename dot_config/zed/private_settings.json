// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "vim_mode": true,
  "theme": "Neovim default dark",
  "icon_theme": "Zed (Default)",
  "buffer_font_family": "Iosevka",
  "ui_font_family": "Iosevka",
  "ui_font_size": 16,
  "buffer_font_size": 16,
  "buffer_line_height": "standard",
  "multi_cursor_modifier": "cmd_or_ctrl",
  "soft_wrap": "preferred_line_length",
  "telemetry": {
    "diagnostics": false,
    "metrics": true
  },
  "features": {
    // Which edit prediction provider to use.
    "edit_prediction_provider": "copilot"
  },
  "toolbar": {
    // Whether to show breadcrumbs.
    "breadcrumbs": true,
    // Whether to show quick action buttons.
    "quick_actions": true,
    // Whether to show the Selections menu in the editor toolbar.
    "selections_menu": true,
    // Whether to show agent review buttons in the editor toolbar.
    "agent_review": true,
    // Whether to show code action buttons in the editor toolbar.
    "code_actions": true
  },
  "title_bar": {
    // Whether to show the branch icon beside branch switcher in the titlebar.
    "show_branch_icon": true,
    // Whether to show the branch name button in the titlebar.
    "show_branch_name": true,
    // Whether to show the project host and name in the titlebar.
    "show_project_items": true,
    // Whether to show onboarding banners in the titlebar.
    "show_onboarding_banner": true,
    // Whether to show user picture in the titlebar.
    "show_user_picture": true,
    // Whether to show the sign in button in the titlebar.
    "show_sign_in": true
  },
  "active_pane_modifiers": {
    // Inset border size of the active pane, in pixels.
    "border_size": 0.5,
    // Opacity of the inactive panes. 0 means transparent, 1 means opaque.
    // Values are clamped to the [0.0, 1.0] range.
    "inactive_opacity": 0.8
  },
  "indent_guides": {
    // Whether to show indent guides in the editor.
    "enabled": true,
    // The width of the indent guides in pixels, between 1 and 10.
    "line_width": 1,
    // The width of the active indent guide in pixels, between 1 and 10.
    "active_line_width": 4,
    // Determines how indent guides are colored.
    // This setting can take the following three values:
    //
    // 1. "disabled"
    // 2. "fixed"
    // 3. "indent_aware"
    "coloring": "indent_aware",
    // Determines how indent guide backgrounds are colored.
    // This setting can take the following two values:
    //
    // 1. "disabled"
    // 2. "indent_aware"
    "background_coloring": "disabled"
  },
  "tab_bar": {
    // Whether or not to show the tab bar in the editor
    "show": true,
    // Whether or not to show the navigation history buttons.
    "show_nav_history_buttons": false,
    // Whether or not to show the tab bar buttons.
    "show_tab_bar_buttons": true
  },
  "tabs": {
    // Show git status colors in the editor tabs.
    "git_status": true,
    // Position of the close button on the editor tabs.
    // One of: ["right", "left", "hidden"]
    "close_position": "right",
    // Whether to show the file icon for a tab.
    "file_icons": true,
    // Controls the appearance behavior of the tab's close button.
    //
    // 1. Show it just upon hovering the tab. (default)
    //     "hover"
    // 2. Show it persistently.
    //     "always"
    // 3. Never show it, even if hovering it.
    //     "hidden"
    "show_close_button": "hover",
    // What to do after closing the current tab.
    //
    // 1. Activate the tab that was open previously (default)
    //     "history"
    // 2. Activate the right neighbour tab if present
    //     "neighbour"
    // 3. Activate the left neighbour tab if present
    //     "left_neighbour"
    "activate_on_close": "history",
    // Which files containing diagnostic errors/warnings to mark in the tabs.
    // Diagnostics are only shown when file icons are also active.
    // This setting only works when can take the following three values:
    //
    // 1. Do not mark any files:
    //    "off"
    // 2. Only mark files with errors:
    //    "errors"
    // 3. Mark files with errors and warnings:
    //    "all"
    "show_diagnostics": "all"
  },
  "restore_on_startup": "none",
  "context_servers": {
    "taskmaster": {
      "source": "custom",
      "command": "npx",
      "args": ["-y", "--package=task-master-ai", "task-master-ai"],
      "env": {}
    }
  },
  "vim": {
    "default_mode": "normal",
    "toggle_relative_line_numbers": true,
    "use_system_clipboard": "always",
    "use_smartcase_find": false,
    "highlight_on_yank_duration": 200,
    "custom_digraphs": {},
    // Cursor shape for the each mode.
    // Specify the mode as the key and the shape as the value.
    // The mode can be one of the following: "normal", "replace", "insert", "visual".
    // The shape can be one of the following: "block", "bar", "underline", "hollow".
    "cursor_shape": {}
  },
  "terminal": {
    // What shell to use when opening a terminal. May take 3 values:
    // 1. Use the system's default terminal configuration in /etc/passwd
    //      "shell": "system"
    // 2. A program:
    //      "shell": {
    //        "program": "sh"
    //      }
    // 3. A program with arguments:
    //     "shell": {
    //         "with_arguments": {
    //           "program": "/bin/bash",
    //           "args": ["--login"]
    //         }
    //     }
    "shell": "system",
    // Where to dock terminals panel. Can be `left`, `right`, `bottom`.
    "dock": "bottom",
    // Default width when the terminal is docked to the left or right.
    "default_width": 640,
    // Default height when the terminal is docked to the bottom.
    "default_height": 320,
    // What working directory to use when launching the terminal.
    // May take 4 values:
    // 1. Use the current file's project directory.  Will Fallback to the
    //    first project directory strategy if unsuccessful
    //      "working_directory": "current_project_directory"
    // 2. Use the first project in this workspace's directory
    //      "working_directory": "first_project_directory"
    // 3. Always use this platform's home directory (if we can find it)
    //     "working_directory": "always_home"
    // 4. Always use a specific directory. This value will be shell expanded.
    //    If this path is not a valid directory the terminal will default to
    //    this platform's home directory  (if we can find it)
    //      "working_directory": {
    //        "always": {
    //          "directory": "~/zed/projects/"
    //        }
    //      }
    "working_directory": "current_project_directory",
    // Set the cursor blinking behavior in the terminal.
    // May take 3 values:
    //  1. Never blink the cursor, ignoring the terminal mode
    //         "blinking": "off",
    //  2. Default the cursor blink to off, but allow the terminal to
    //     set blinking
    //         "blinking": "terminal_controlled",
    //  3. Always blink the cursor, ignoring the terminal mode
    //         "blinking": "on",
    "blinking": "terminal_controlled",
    // Default cursor shape for the terminal.
    //  1. A block that surrounds the following character
    //     "block"
    //  2. A vertical bar
    //     "bar"
    //  3. An underline / underscore that runs along the following character
    //     "underline"
    //  4. A box drawn around the following character
    //     "hollow"
    //
    // Default: not set, defaults to "block"
    "cursor_shape": null,
    // Set whether Alternate Scroll mode (code: ?1007) is active by default.
    // Alternate Scroll mode converts mouse scroll events into up / down key
    // presses when in the alternate screen (e.g. when running applications
    // like vim or  less). The terminal can still set and unset this mode.
    // May take 2 values:
    //  1. Default alternate scroll mode to on
    //         "alternate_scroll": "on",
    //  2. Default alternate scroll mode to off
    //         "alternate_scroll": "off",
    "alternate_scroll": "on",
    // Set whether the option key behaves as the meta key.
    // May take 2 values:
    //  1. Rely on default platform handling of option key, on macOS
    //     this means generating certain unicode characters
    //         "option_as_meta": false,
    //  2. Make the option keys behave as a 'meta' key, e.g. for emacs
    //         "option_as_meta": true,
    "option_as_meta": false,
    // Whether or not selecting text in the terminal will automatically
    // copy to the system clipboard.
    "copy_on_select": false,
    // Whether to show the terminal button in the status bar
    "button": true,
    // Any key-value pairs added to this list will be added to the terminal's
    // environment. Use `:` to separate multiple values.
    "env": {
      // "KEY": "value1:value2"
    },
    // Set the terminal's line height.
    // May take 3 values:
    //  1. Use a line height that's comfortable for reading, 1.618
    //         "line_height": "comfortable"
    //  2. Use a standard line height, 1.3. This option is useful for TUIs,
    //      particularly if they use box characters
    //         "line_height": "standard",
    //  3. Use a custom line height.
    //         "line_height": {
    //           "custom": 2
    //         },
    "line_height": "standard",
    // Activate the python virtual environment, if one is found, in the
    // terminal's working directory (as resolved by the working_directory
    // setting). Set this to "off" to disable this behavior.
    "detect_venv": {
      "on": {
        // Default directories to search for virtual environments, relative
        // to the current working directory. We recommend overriding this
        // in your project's settings, rather than globally.
        "directories": [".env", "env", ".venv", "venv"],
        // Can also be `csh`, `fish`, `nushell` and `power_shell`
        "activate_script": "default"
      }
    },
    "toolbar": {
      // Whether to display the terminal title in its toolbar's breadcrumbs.
      // Only shown if the terminal title is not empty.
      //
      // The shell running in the terminal needs to be configured to emit the title.
      // Example: `echo -e "\e]2;New Title\007";`
      "breadcrumbs": true
    },
    // Scrollbar-related settings
    "scrollbar": {
      // When to show the scrollbar in the terminal.
      // This setting can take five values:
      //
      // 1. null (default): Inherit editor settings
      // 2. Show the scrollbar if there's important information or
      //    follow the system's configured behavior (default):
      //   "auto"
      // 3. Match the system's configured behavior:
      //    "system"
      // 4. Always show the scrollbar:
      //    "always"
      // 5. Never show the scrollbar:
      //    "never"
      "show": null
    },
    // Set the terminal's font size. If this option is not included,
    // the terminal will default to matching the buffer's font size.
    "font_size": 13,
    // Set the terminal's font family. If this option is not included,
    // the terminal will default to matching the buffer's font family.
    "font_family": "Agave Nerd Font Mono",
    // Set the terminal's font fallbacks. If this option is not included,
    // the terminal will default to matching the buffer's font fallbacks.
    // This will be merged with the platform's default font fallbacks
    "font_fallbacks": ["0xProto"]
    // The weight of the editor font in standard CSS units from 100 to 900.
    // "font_weight": 400
    // Sets the maximum number of lines in the terminal's scrollback buffer.
    // Default: 10_000, maximum: 100_000 (all bigger values set will be treated as 100_000), 0 disables the scrolling.
    // Existing terminals will not pick up this change until they are recreated.
    // "max_scroll_history_lines": 10000,
  }
}
